{"ast":null,"code":"var _jsxFileName = \"/Users/quannguyen/code/QuanNg1996/JSProjects/udemy_course/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Persons from '../components/Persons/Persons';\nimport classes from './App.module.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport WithClass from '../hoc/WithClass';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; // const person = Object.assign({}, this.state.persons[personIndex])\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState((prevState, props) => {\n        return {\n          persons: persons,\n          changeCounter: prevState.changeCounter + 1\n        };\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    console.log('[App.js] constructor');\n    this.state = {\n      persons: [{\n        id: 'test1',\n        name: 'Quan',\n        age: 23\n      }, {\n        id: 'test2',\n        name: 'Max',\n        age: 29\n      }, {\n        id: 'test3',\n        name: 'Justina',\n        age: 25\n      }],\n      otherState: 'some other value',\n      showPersons: false,\n      showCockpit: true,\n      changeCounter: 0\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedStateFromProps', props);\n    return state;\n  } // componentWillMount(props, state) {\n  //   console.log('[App.js] getDerivedStateFromProps', props);\n  //   return state;\n  // }\n\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate');\n    return true;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Persons, {\n        persons: this.state.persons,\n        clicked: this.deletePersonHandler,\n        changed: this.nameChangedHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(WithClass, {\n      className: classes.App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          showCockpit: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Remove Cockpit\"), this.state.showCockpit ? React.createElement(Cockpit, {\n      title: this.props.appTitle,\n      showPersons: this.state.showPersons,\n      personsLength: this.state.persons.length,\n      clicked: this.togglePersonsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }) : null, persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/quannguyen/code/QuanNg1996/JSProjects/udemy_course/src/containers/App.js"],"names":["React","Component","Persons","classes","Cockpit","WithClass","App","constructor","props","nameChangedHandler","event","id","personIndex","state","persons","findIndex","p","person","name","target","value","setState","prevState","changeCounter","deletePersonHandler","splice","togglePersonsHandler","doesShow","showPersons","console","log","age","otherState","showCockpit","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","render","appTitle","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Persons from '../components/Persons/Persons';\nimport classes from './App.module.css';\nimport Cockpit from '../components/Cockpit/Cockpit';\nimport WithClass from '../hoc/WithClass';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('[App.js] constructor');\n    this.state = {\n      persons: [\n        { id: 'test1', name: 'Quan', age: 23 },\n        { id: 'test2', name: 'Max', age: 29 },\n        { id: 'test3', name: 'Justina', age: 25}\n      ],\n      otherState: 'some other value',\n      showPersons: false,\n      showCockpit: true,\n      changeCounter: 0\n    }\n  }\n\n\n  static getDerivedStateFromProps(props, state) {\n    console.log('[App.js] getDerivedStateFromProps', props);\n    return state;\n  }\n\n  // componentWillMount(props, state) {\n  //   console.log('[App.js] getDerivedStateFromProps', props);\n  //   return state;\n  // }\n\n  componentDidMount() {\n    console.log('[App.js] componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('[App.js] shouldComponentUpdate')\n    return true;\n  }\n\n  componentDidUpdate() {\n    console.log('[App.js] componentDidUpdate');\n  }\n\n  nameChangedHandler = (event, id) => {\n\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n\n    const person = {\n      ...this.state.persons[personIndex]\n    }\n\n    // const person = Object.assign({}, this.state.persons[personIndex])\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState((prevState, props) => {\n      return {\n        persons: persons,\n        changeCounter: prevState.changeCounter + 1\n      }\n    });\n  }\n\n  deletePersonHandler = (personIndex) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({persons: persons});\n  }\n\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons : !doesShow });\n  }\n\n  render() {\n    console.log('[App.js] render');\n    let persons = null;\n    if (this.state.showPersons) {\n      persons =\n        <div>\n          <Persons\n            persons={this.state.persons}\n            clicked={this.deletePersonHandler}\n            changed={this.nameChangedHandler}\n          />\n        </div>\n    }\n\n    return (\n      <WithClass className={classes.App}>\n        <button onClick={() => {\n          this.setState({ showCockpit: false });\n          }}\n        >\n          Remove Cockpit\n        </button>\n        {this.state.showCockpit ? (\n          <Cockpit\n            title={this.props.appTitle}\n            showPersons={this.state.showPersons}\n            personsLength={this.state.persons.length}\n            clicked={this.togglePersonsHandler}\n          />\n        ) : null }\n        {persons}\n      </WithClass>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}